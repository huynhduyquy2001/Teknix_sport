/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    'time-slots': TimeSlot;
    courts: Court;
    bookings: Booking;
    payments: Payment;
    partners: Partner;
    media: Media;
    'partner-specs': PartnerSpec;
    products: Product;
    //'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  phoneNumber?: string | null;
  phoneVerified?: boolean | null;
  emailVerified?: boolean | null;
  verificationCode?: number | null;
  verificationCodeExpires?: Date;
  auth2?: boolean | null;
  roles?: ('admin' | 'customer')[] | null;
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean | null;
  apiKey?: string | null;
  apiKeyIndex?: string | null;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "time-slots".
 */
export interface TimeSlot {
  id: string;
  type: 'normal' | 'vip' | 'student';
  hourlyRate?:
  | {
    from?: number | null;
    to?: number | null;
    price?: number | null;
    id?: string | null;
  }[]
  | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "courts".
 */
export interface Court {
  id: string;
  name: string;
  description: string;
  image?: string | Media | null;
  available?: boolean | null;
  owner?: (string | null) | Partner;
  hourlyRate?: (string | null) | TimeSlot;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "partners".
 */
export interface Partner {
  id: string;
  name: string;
  owner: string | User;
  banner?: string | Media | null;
  avatar?: string | Media | null;
  description?: string | null;
  /**
   * @minItems 2
   * @maxItems 2
   */
  location?: [number, number] | null;
  openingTimeAt?: number | null;
  closingTimeAt?: number | null;
  Type: {
    bussinessType: ('renter' | 'seller')[];
    bussinessObject: ('badminton' | 'basketball' | 'pickleballl' | 'soccer')[];
  };
  courts: {
    court?: (string | Court)[] | null;
  };
  products: {
    products?: (string | Product)[] | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  name: string;
  image?: string | Media | null;
  description: string;
  price: number;
  isSync?: boolean | null;
  inventory: number;
  owner?: (string | null) | Partner;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "bookings".
 */
export interface Booking {
  id: string;
  court: string | Court;
  user: string | User;
  bookingDate: string;
  bookingTime: {
    startTime: number;
    endTime: number;
  };
  bookingStatus?: ('pending' | 'confirmed' | 'cancelled') | null;
  paymentStatus?: ('unpaid' | 'paid' | 'refunded') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payments".
 */
export interface Payment {
  id: string;
  booking: string | Booking;
  amount: number;
  paymentMethod: 'credit-card' | 'paypal' | 'bank-transfer';
  status?: ('pending' | 'successful' | 'failed') | null;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "partner-specs".
 */
export interface PartnerSpec {
  id: string;
  followingCount?: number | null;
  followerCount?: number | null;
  ratingStar?: number | null;
  responseRate?: number | null;
  responseTime?: number | null;
  owner?: (string | null) | Partner;
  isMerchantVerified?: boolean | null;
  itemCount?: number | null;
  lastActiveTime?: number | null;
  chatDisabled?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
  | {
    [k: string]: unknown;
  }
  | unknown[]
  | string
  | number
  | boolean
  | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config { }
}